listen              1935;
max_connections     1000;
daemon              off;
srs_log_tank        console;
 srs_log_level      info;
ff_log_dir          ./objs;

http_server {

    enabled         on;
    listen          8080;
    dir            ./objs/nginx/html;
}

vhost SecretPasswordVhost {
    gop_cache      on;
    queue_length    10;
    mr {
        enabled     on;
    }
    mw_latency      100;
    

    transcode {
        enabled    on;
        ffmpeg     ./objs/ffmpeg/bin/ffmpeg;
        engine ff {
            enabled         on;
            vfilter {
                  vf "scale='if(gt(iw,ih),if(gt(iw,1920),1920,-2),if(gt(ih,1920),trunc(1080*iw/ih/2)*2,-2))':'if(gt(iw,ih),if(gt(ih,1080),1080,-2),if(gt(iw,1080),trunc(1920*ih/iw/2)*2,-2))'";
                loglevel       error;
            }
            vcodec          libx264;
            vfps            30;
            vwidth          0;
            vheight         0;
            vthreads        1; # Change threads according CPU
            vprofile        high;
            vpreset         superfast;
            vparams {
                g       120;
                tune    zerolatency;
                crf     23;

            }
            acodec          aac;
            abitrate        256;
            achannels       2;
            aparams {
            }
            output          rtmp://127.0.0.1:[port]/[app]?vhost=[vhost]-HLS/[stream]_1080;
        }

        engine ff {
            enabled         on;
            vfilter {
                vf "scale='if(gt(iw,ih),if(gt(iw,1280),1280,-2),if(gt(ih,720),trunc(720*iw/ih/2)*2,-2))':'if(gt(iw,ih),if(gt(ih,720),720,-2),if(gt(ih,720),trunc(1280*iw/ih/2)*2,-2))'";
               


                loglevel       error;
            }
            vcodec          libx264;
            vbitrate        4000;
            vfps            30;
            vwidth          0;
            vheight         0;
            vthreads        1;
            vprofile        high;
            vpreset         superfast;
            vparams {
                g       60;
                tune    zerolatency;
                  crf     25;
            }
            acodec          aac;
            abitrate        256;
            achannels       2;
            aparams {
            }
            output          rtmp://127.0.0.1:[port]/[app]?vhost=[vhost]-HLS/[stream]_720;
        }

        engine ff {
            enabled         on;
            vfilter {
                  vf "scale='if(gt(iw,ih),if(gt(iw,854),854,-2),if(gt(ih,480),trunc(480*iw/ih/2)*2,-2))':'if(gt(iw,ih),if(gt(ih,480),480,-2),if(gt(ih,480),trunc(854*iw/ih/2)*2,-2))'";
             

                loglevel       error;
            }
            vcodec          libx264;
            vbitrate        1000;
            vfps            30;
            vwidth          0;
            vheight         0;
            vthreads        1;
            vprofile        main;
            vpreset         superfast;
            vparams {
                g       60;
                tune    zerolatency;
                crf     27;
            }
            acodec          aac;
            abitrate        128;
            achannels       2;
            aparams {
            }
            output          rtmp://127.0.0.1:[port]/[app]?vhost=[vhost]-HLS/[stream]_480;
        }
    }
}

vhost SecretPasswordVhost-HLS {
    gop_cache      on;
    queue_length    10;
    min_latency     on;
    mr {
        enabled     on;
    }
    mw_latency      100;
    hls {
        enabled         on;
         hls_fragment 2;
        hls_window 7200; # 7200 segundos - 2 horas de janela para voltar na gravação
        hls_dispose 7200;  # 7200 segundos - 2 horas de janela para deletar os arquivos
        hls_path       ./objs/nginx/html;
        hls_dispose 300;
        hls_m3u8_file   [app]/[stream].m3u8;
        hls_ts_file     [app]/[stream]-[seq].ts;
    }


    
       dash {
        enabled         on;
        dash_fragment       2;
        dash_update_period  5;
        dash_timeshift     1800;
        dash_window_size    900;
        dash_path           ./objs/nginx/html;
        dash_mpd_file       [app]/[stream].mpd;
       }
}